extract ()
{
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1   ;;
      *.tar.gz)    tar xzf $1   ;;
      *.bz2)       bunzip2 $1   ;;
      *.rar)       unrar x $1     ;;
      *.gz)        gunzip $1    ;;
      *.tar)       tar xf $1    ;;
      *.tbz2)      tar xjf $1   ;;
      *.tgz)       tar xzf $1   ;;
      *.zip)       unzip $1     ;;
      *.Z)         uncompress $1;;
      *.7z)        7z x $1      ;;
      *)           echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

# Smart cd - chops of the terminating filename if not a dir
cd () {
        if [[ -f ${1} ]]
        then
                [[ ! -e ${1:h} ]] && return 1
                print "Correcting ${1} to ${1:h}"
                builtin cd ${1:h}
        else
                builtin cd ${1}
        fi
}


# Create and go to the directory
mcd ()
{
	mkdir -p $1
	cd $1
}

# Change directory to arg of last command (prob ls)
cdla () {
    cd "$_"
}

catla () {
    cat "$_"
}

# Convert .heic images to jpg
heic () {
    sips -s format jpeg $1 --out $2
}

# Convert all .heic files in directory to jpg and remove original
heicd() {
    for i in *.heic(:r) ; sips -s format jpeg "$i.heic" --out "$i.jpg" && rm "$1.heic"
}

# Shortcut to iCloud dir
icloud () {
    if [ -z "$1" ]
    then
        cd ~/icloud
    else
        cd ~/icloud/"${1}"
    fi
}

# cheat.sh - tldr @ commandline
cheat() {
   curl cheat.sh/"$1"
}

# Git
########
# Keep repo up to date
# Useage: gmv 1 develop - rebases on the last commit.
# Use git commit --ammend to maintain one commit.. cleannn
gmv () {
    git rebase --onto $2 HEAD~$1
}

# Don't add this stuff to history
zshaddhistory() {
    local line=${1%%$'\n'}
    local cmd=${line%% *}
    # Only those that satisfy all of the following conditions are added to the history
    [[ ${#line} -ge 5
       && ${cmd} != ll
       && ${cmd} != ls
       && ${cmd} != la
       && ${cmd} != cd
       && ${cmd} != man
       && ${cmd} != scp
       && ${cmd} != vim
       && ${cmd} != nvim
       && ${cmd} != less
       && ${cmd} != ping
       && ${cmd} != open
       && ${cmd} != file
       && ${cmd} != which
       && ${cmd} != whois
       && ${cmd} != drill
       && ${cmd} != uname
       && ${cmd} != md5sum
       && ${cmd} != pacman
       && ${cmd} != xdg-open
       && ${cmd} != traceroute
       && ${cmd} != speedtest-cli
    ]]
}
zshaddhistory
